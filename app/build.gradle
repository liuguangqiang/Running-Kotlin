buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'realm-android'
apply plugin: 'io.fabric'

def ext = rootProject.ext

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        applicationId "com.liuguangqiang.irunning"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 4
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    lintOptions {
        abortOnError false
    }

    signingConfigs {
        release {
            try {
                storeFile file("../buildConfig/running.keystore.jks")
                storePassword KEYSTORE_PWD
                keyAlias KEY_ALIAS
                keyPassword KEY_PWD
            } catch (ex) {
                throw new InvalidUserDataException("Have to define KEYSTORE_PWD and KEY_PWD.")
            }
        }
    }

    productFlavors {
        dev {
//            applicationIdSuffix '.dev'
            buildConfigField 'String', 'API', '"http://api.running.maiziui.com/"'
        }

        production {
            buildConfigField 'String', 'API', '"http://api.running.maiziui.com/"'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.release
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }

    dexOptions {
        javaMaxHeapSize "2048M"
    }

    compileOptions.incremental = false
}

kapt {
    correctErrorTypes = true
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    //support
    compile supportDesign

    //dagger2
    compile dagger2
    kapt daggerCompiler2

    //http
    compile retrofit
    compile retrofitAdapter
    compile okhttpLog

    //rxjava
    compile rxandroid
    compile rxjava

    //json
    compile logansquare
    compile logansquareConverter
    kapt logansquareCompiler

    //util
    compile eventbus
    compile guangqiangUtils
    compile butterknife

    compile 'org.jetbrains.anko:anko-sdk15:0.9.1'
    compile 'com.android.support:appcompat-v7:25.3.0'
    testCompile 'junit:junit:4.12'

    compile 'com.crashlytics.sdk.android:crashlytics:2.6.8'
}
